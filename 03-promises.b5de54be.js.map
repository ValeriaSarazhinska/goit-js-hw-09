{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAACH,WAAUC,UAGnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAnCMO,SAASC,cAAc,QAE/BC,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAMC,iBAKN,IAJA,IAAMC,EAAQC,OAAOH,EAAMI,cAAcC,SAASf,MAAMgB,OAClDC,EAAOJ,OAAOH,EAAMI,cAAcC,SAASE,KAAKD,OAChDE,EAASL,OAAOH,EAAMI,cAAcC,SAASG,OAAOF,OAEjDG,EAAI,EAAGA,EAAID,EAAQC,IAE1BrB,EAAcqB,EAAI,EAAGP,EAAQK,EAAOE,GACjCC,MAAK,SAAAC,G,IAAEtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAChBJ,EAAA0B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAJ,G,IAAEtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBJ,EAAA0B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import {Notify} from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nform.addEventListener(\"submit\", handleSubmit)\n\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const delay = Number(event.currentTarget.elements.delay.value);\n  const step = Number(event.currentTarget.elements.step.value);\n  const amount = Number(event.currentTarget.elements.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n\n    createPromise(i + 1, delay + step * i)\n      .then(({position, delay}) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({position, delay}) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position, delay})\n      } else {\n        // Reject\n        reject({position, delay})\n      }\n    }, delay)\n  })\n\n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","elements","value","step","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b5de54be.js.map"}